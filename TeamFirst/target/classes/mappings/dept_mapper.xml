<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
2-1
dept-mapper 동적커리 수정
부서명으로 검색
manager_id로 검색
2-2
목록:
location_name, manager last_name 보이도록 수정

 -->

<mapper namespace="com.java.dept.service.impl.DeptMapper">

	<select id="getDept" resultType="dept"
		parameterType="dept">
		select * from departments where department_id =
		#{department_id}
	</select>
	
	<select id="getCount" resultType="int">
	
		select count(*) from departments
		<where>
			<if test="department_name !=null and department_name != ''">
			and upper(department_name) like '%'||upper(#{department_name})||'%'
			</if>
			<if test="manager_id !=null and manager_id != ''">
			and manager_id = #{manager_id}
			</if>
			<if test="location_id !=null and location_id != ''">
			and location_id = #{location_id}
			</if>
		</where>
	</select>
	

	<select id="getSearchDept" resultType="dept"
		parameterType="dept">
		select b.* from (select rownum rn, a.* from (
		select d.department_id, d.department_name, d.manager_id, e.last_name, d.location_id, l.city from departments d left outer join locations l on d.location_id=l.location_id left outer join employees e on d.manager_id=e.employee_id
		<where>
		<if test="department_name !=null and department_name != ''">
			and upper(d.department_name) like '%'||upper(#{department_name})||'%'
			</if>
			<if test="manager_id !=null and manager_id != ''">
			and d.manager_id = #{manager_id}
			</if>
			<if test="location_id !=null and location_id != ''">
			and d.location_id = #{location_id}
			</if>
		</where>
		
		)a)b
		<where>
		<if test="start!=null and start !=''">
		
			rn between #{start} and #{end}
		</if>
			
			</where>
	order by department_id
	</select>
	

	<insert id="insertDept" parameterType="dept">
		insert into departments values
		(
		#{department_id},
		#{department_name},
		#{manager_id},
		#{location_id}
		)
				
	</insert>
	<update id="updateDept" parameterType="dept">
		update departments set
		department_name = #{department_name},
		manager_id = #{manager_id},
		location_id = #{location_id}
		where
		department_id= #{department_id}
	</update>

	<delete id="deleteDept" parameterType="dept">
		delete from departments where
		department_id = #{department_id}

	</delete>
</mapper>